name: RHDH Plugin Certification Catalog Update

on:
  push:
    branches:
      - main
    paths:
      - 'publishers/**/package.yaml'
  workflow_dispatch:

jobs:
  detect-changes:
    name: Detect PR Changes
    runs-on: ubuntu-latest
    outputs:
      modified_files: ${{ steps.changed-files.outputs.all_changed_files }}
      publisher_name: ${{ steps.extract-plugin.outputs.publisher_name }}
      plugin_name: ${{ steps.extract-plugin.outputs.plugin_name }}
      package_yaml: ${{ steps.extract-plugin.outputs.package_yaml }}
      version: ${{ steps.extract-plugin.outputs.version }}
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Identify modified plugin files
      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: publishers/**/package.yaml

      # Extract plugin name and package.yaml path
      - name: Extract Plugin Name and Package.yaml Path
        id: extract-plugin
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Processing file: $file"
            PUBLISHER_NAME=$(echo "$file" | cut -d'/' -f2)
            PLUGIN_NAME=$(echo "$file" | cut -d'/' -f3)
            VERSION=$(echo "$file" | cut -d'/' -f4)

            yq e '.global.dynamic.plugins[].package' $file | while read -r package; do
              IMAGE_LOC=$(echo "$package" | cut -d':' -f1)
              PLUGIN_VERSION=$(echo "$package" | cut -d':' -f2 | cut -d'!' -f1)

              echo "IMAGE_LOC=$IMAGE_LOC"
              echo "PLUGIN_VERSION=$PLUGIN_VERSION"
            done

            
            echo "PUBLISHER_NAME=$PUBLISHER_NAME" >> $GITHUB_OUTPUT
            echo "PLUGIN_NAME=$PLUGIN_NAME" >> $GITHUB_OUTPUT
            echo "PACKAGE_YAML=$file" >> $GITHUB_OUTPUT
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          done

  Append-plugin-metadata:
    name: Append and upload Plugin Metadata
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:

      - name: Append plugin entry if not present
        run: |
          # Set variables
          FILE=plugins.yaml
          NAME="$PLUGIN_NAME"
          AUTHORS="$PUBLISHER_NAME"
          OWNERS="${OWNERS:-${GITHUB_ACTOR}}"
          IMAGE="$PACKAGE_YAML"
          VERSION="$VERSION"

          # Check for existing plugin by name and image
          exists=$(yq e ".certified[] | select(.name == \"$NAME\" and .image_loc == \"$IMAGE\")" "$FILE")

          if [ -z "$exists" ]; then
            echo "Appending new plugin entry..."

            yq e -i '
              .certified += [{
                "name": env(NAME),
                "authors": env(AUTHORS),
                "owners": env(OWNERS),
                "image_loc": env(IMAGE),
                "plugin_version": env(VERSION),
                "rhdh_version": null
              }]
            ' "$FILE"
          else
            echo "Plugin already exists. Skipping append."
          fi
        env:
          NAME: ${{ env.PLUGIN_NAME }}
          AUTHORS: ${{ env.PUBLISHER_NAME }}
          OWNERS: dcurran90
          IMAGE: ${{ env.PACKAGE_YAML }}
          VERSION: ${{ env.VERSION }}

      - name: Append to HTML Output
        run: |
          PUBLISHER_NAME="${{ needs.detect-changes.outputs.publisher_name }}"
          PLUGIN_NAME="${{ needs.detect-changes.outputs.plugin_name }}"
          PACKAGE_YAML="${{ needs.detect-changes.outputs.package_yaml }}"
          VERSION="${{ needs.detect-changes.outputs.version }}"
          
          cat <<EOF > new_output.html
          <p>Publisher Name: $PUBLISHER_NAME</p>
          <p>Version: $VERSION</p>
          <p>Plugin Name: $PLUGIN_NAME</p>
          <p>Package repo path: https://github.com/redhat-developer/rhdh-plugin-certification/blob/rose-branch/$PACKAGE_YAML</p>
          EOF
          
      - name: Upload Plugin Metadata
        uses: actions/upload-artifact@v4
        with:
          name: plugin-metadata
          path: new_output.html
        
 